{
  "name": "issue_overview",
  "description": "Provides an overview of issues including their count, status, creator, and details.",
  "datasource": "issues",
  "dimensions": [
    {
      "name": "number",
      "description": "The unique identifier for each issue.",
      "categories": null,
      "dtype": "BIGINT"
    },
    {
      "name": "title",
      "description": "The title of the issue.",
      "categories": null,
      "dtype": "VARCHAR"
    },
    {
      "name": "body",
      "description": "The description of the issue.",
      "categories": null,
      "dtype": "VARCHAR"
    },
    {
      "name": "author_login",
      "description": "The login of the user who created the issue.",
      "categories": null,
      "dtype": "VARCHAR"
    },
    {
      "name": "created_at",
      "description": "The timestamp when the issue was created.",
      "categories": null,
      "dtype": "TIMESTAMP WITH TIME ZONE"
    },
    {
      "name": "state",
      "description": "The current state of the issue, e.g., open or closed.",
      "categories": null,
      "dtype": "VARCHAR"
    }
  ],
  "measures": [
    {
      "name": "total_issues",
      "description": "The total number of issues created.",
      "expr": "COUNT(number)"
    },
    {
      "name": "open_issues",
      "description": "The total number of issues that are currently open.",
      "expr": "SUM(CASE WHEN state = 'open' THEN 1 ELSE 0 END)"
    },
    {
      "name": "first_issue_creator",
      "description": "The login of the user who created the first issue.",
      "expr": "MIN(author_login) FILTER (WHERE created_at = (SELECT MIN(created_at) FROM assistant_ui_issues.issues))"
    }
  ],
  "sample_questions": [
    "How many issues have been created on the repo?",
    "How many issues are currently open?",
    "Who created the first issue?",
    "What is the name and description of the issue?"
  ],
  "sql_to_underlying_datasource": "SELECT number, title, body, author__login AS author_login, created_at, state FROM assistant_ui_issues.issues"
}